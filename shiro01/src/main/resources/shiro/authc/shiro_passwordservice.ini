# Shiro提供了PasswordService及CredentialsMatcher接口用于提供加密密码及验证密码服务
# Shiro默认提供了PasswordService实现:DefaultPasswordService;CredentialsMatcher实现:PasswordMatcher及HashedCredentialsMatcher(更强大)
[main]
# 定义PasswordService的实现
passwordService=org.apache.shiro.authc.credential.DefaultPasswordService
# 定义散列密码使用的HashService
hashService=org.apache.shiro.crypto.hash.DefaultHashService
passwordService.hashService=$hashService
# 定义对散列出值进行格式化的对象,默认使用Shiro1CryptFormat;另外提供了Base64Format和HexFormat,对于有salt的密码请自定义实现ParsableHashFormat然后把salt格式化到散列值中
hashFormat=org.apache.shiro.crypto.hash.format.Shiro1CryptFormat
passwordService.hashFormat=$hashFormat
# 定义用于根据散列值得到散列的密码和salt的工厂,默认使用DefaultHashFormatFactory;因为如果使用如SHA算法,那么会生成一个salt,此salt需要保存到散列后的值中以便之后与传入的密码比较时使用
hashFormatFactory=org.apache.shiro.crypto.hash.format.DefaultHashFormatFactory
passwordService.hashFormatFactory=$hashFormatFactory
# 定义CredentialsMathcer的实现(PasswordMatcher将随机生成盐)
passwordMatcher=org.apache.shiro.authc.credential.PasswordMatcher
passwordMatcher.passwordService=$passwordService

myRealmD=com.bo.shiro.realm.MyRealmD
myRealmD.passwordService=$passwordService
myRealmD.credentialsMatcher=$passwordMatcher
securityManager.realms=$myRealmD